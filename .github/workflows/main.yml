name: CI

on: [pull_request, push]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  validation:
    name: "Validation"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/actions/wrapper-validation@v4

  build-docker:
    strategy:
      fail-fast: false
      matrix:
        include:
          - container: wpilib/raspbian-cross-ubuntu:bookworm-22.04
            artifact-name: Arm32
            build-options: -Pplatform=linux-arm32
          - container: wpilib/aarch64-cross-ubuntu:bookworm-22.04
            artifact-name: Arm64
            build-options: -Pplatform=linux-arm64
          - container: wpilib/ubuntu-base:22.04
            artifact-name: Linux
            build-options:

    name: "Build - ${{ matrix.artifact-name }}"
    runs-on: ubuntu-latest
    needs: [validation]
    container: ${{ matrix.container }}
    steps:
      - run: sudo apt-get update && sudo apt-get install -y gfortran ninja-build
        name: Install dependencies
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - run: ./gradlew publish ${{ matrix.build-options }}
        name: Build with Gradle
      - run: ls build*/install/lib/*
        name: List libraries
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: gradleDir/outputs/

  build-windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - artifact-name: WinArm64
            tool-arch: amd64_arm64
            build-options: -Pplatform=windows-arm64
          - artifact-name: Win64
            tool-arch: amd64
            build-options:

    name: "Build - ${{ matrix.artifact-name }}"
    runs-on: windows-2022
    needs: [validation]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: ${{ matrix.tool-arch }}
      - run: ./gradlew publish ${{ matrix.build-options }}
        name: Build with Gradle
      - run: ls build*/install/lib/*
        name: List libraries
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: gradleDir/outputs/

  build-mac:
    name: "Build - Mac"
    runs-on: macOS-14
    needs: [validation]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - run: brew install cmake ninja
        name: install ninja
      - run: ./gradlew publish
        name: Build with Gradle
      - run: ls build*/install/lib/*
        name: List libraries
      - uses: actions/upload-artifact@v4
        with:
          name: Mac
          path: gradleDir/outputs/

  combine:
    name: Combine
    needs: [build-docker, build-windows, build-mac]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: wpilibsuite/build-tools
      - uses: actions/download-artifact@v4
        with:
          path: combiner/products/build/allOutputs
      - name: Flatten Artifacts
        run: rsync -a --delete combiner/products/build/allOutputs/*/* combiner/products/build/allOutputs/
      - name: Combine
        if: |
          !startsWith(github.ref, 'refs/tags/v')
        run: ./gradlew publish -Pthirdparty
        working-directory: combiner
      - name: Combine (Release)
        if: |
          github.repository_owner == 'wpilibsuite' &&
          startsWith(github.ref, 'refs/tags/v')
        run: |
          ./gradlew publish -Pthirdparty
        working-directory: combiner
        env:
          RUN_AZURE_ARTIFACTORY_RELEASE: 'TRUE'
          ARTIFACTORY_PUBLISH_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PUBLISH_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
      - uses: actions/upload-artifact@v4
        with:
          name: Maven
          path: ~/releases